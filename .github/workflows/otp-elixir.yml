name: otp-elixir image

on:
  push:
    branches: 
     - main 
     - dev/otp-elixir

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/$( echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' ):otp-elixir-builder_${{ github.sha }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      - name: build the image
        run: |
          docker buildx build \
            --tag ${{ env.IMAGE_NAME }} \
            --build-arg OTP_VER=23.3 \
            --build-arg ELIXIR_VER=1.11.3 \
            --platform linux/amd64 \
            --output 'type=image,push=true' \
            ./otp-elixir

  build-arm64:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/$( echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' ):otp-elixir-builder_${{ github.sha }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      - name: build the image
        run: |
          docker buildx build \
            --tag ${{ env.IMAGE_NAME }} \
            --build-arg OTP_VER=23.3 \
            --build-arg ELIXIR_VER=1.11.3 \
            --platform linux/arm64 \
            --output 'type=image,push=true' \
            ./otp-elixir
